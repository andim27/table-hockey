//AS3ExporterAIR version 2.3, code Flash 10, generated by Prefab3D: http://www.closier.nl/prefab
package 
{
	import away3d.containers.ObjectContainer3D;
	import away3d.containers.Scene3D;
	import away3d.materials.*;
	import away3d.core.base.*;
	import away3d.core.utils.Init;
	import away3d.loaders.utils.*;
	import away3d.loaders.data.*;
	import flash.utils.Dictionary;
	import away3d.primitives.*;

	import away3d.core.math.*;

	public class ManMesh extends ObjectContainer3D
	{
		private var objs:Object = {};
		private var geos:Array = [];
		private var oList:Array =[];
		private var aC:Array;
		private var aV:Array;
		private var aU:Array;
		private var _scale:Number;

		public function ManMesh(init:Object = null)
		{
			var ini:Init = Init.parse(init);
			_scale = ini.getNumber("scaling", 1);
			setSource();
			addContainers();
			buildMeshes();
			buildMaterials();
			cleanUp();
		}

		private function buildMeshes():void
		{
			var m0:MatrixAway3D = new MatrixAway3D();
			m0.sxx = 1;
			m0.sxy = 0;
			m0.sxz = 0;
			m0.tx = 5.8699846267700195*_scale;
			m0.syx = 0;
			m0.syy = 1;
			m0.syz = 0;
			m0.ty = 660.6348514556885*_scale;
			m0.szx = 0;
			m0.szy = 0;
			m0.szz = 1;
			m0.tz = 50.82136392593384*_scale;

			objs.obj0 = {name:"Plane",  transform:m0, pivotPoint:new Number3D(0,0,0), container:0, bothsides:false, material:null, ownCanvas:false, pushfront:false, pushback:false};
			objs.obj0.geo=geos[0];

			var ref:Object;
			var mesh:Mesh;
			var j:int;
			var av:Array;
			var au:Array;
			var v0:Vertex;
			var v1:Vertex;
			var v2:Vertex;
			var u0:UV;
			var u1:UV;
			var u2:UV;
			var aRef:Array ;
			for(var i:int = 0;i<1;++i){
				ref = objs["obj"+i];
				if(ref != null){
					mesh = new Mesh();
					mesh.type = ".as";
					mesh.bothsides = ref.bothsides;
					mesh.name = ref.name;
					mesh.pushfront = ref.pushfront;
					mesh.pushback = ref.pushback;
					mesh.ownCanvas = ref.ownCanvas;
					if(aC[ref.container]!= null)
						aC[ref.container].addChild(mesh);

					oList.push(mesh);
					mesh.transform = ref.transform;
					mesh.movePivot(ref.pivotPoint.x, ref.pivotPoint.y, ref.pivotPoint.z);
					if (ref.geo.geometry != null) {
						mesh.geometry = ref.geo.geometry;
						continue;
					}
					ref.geo.geometry = new Geometry();
					mesh.geometry = ref.geo.geometry;
					aRef = ref.geo.f.split(",");
					for(j = 0;j<aRef.length;j+=6){
						try{
							av = ref.geo.aV[parseInt(aRef[j], 16)].split("/");
							v0 = new Vertex(Number(parseFloat(av[0]))*_scale, Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);
							av = ref.geo.aV[parseInt(aRef[j+1],16)].split("/");
							v1 = new Vertex(Number(parseFloat(av[0]))*_scale, Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);
							av = ref.geo.aV[parseInt(aRef[j+2],16)].split("/");
							v2 = new Vertex(Number(parseFloat(av[0]))*_scale, Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);
							au = ref.geo.aU[parseInt(aRef[j+3],16)].split("/");
							u0 = new UV(parseFloat(au[0]), parseFloat(au[1]));
							au = ref.geo.aU[parseInt(aRef[j+4],16)].split("/");
							u1 = new UV(parseFloat(au[0]), parseFloat(au[1]));
							au = ref.geo.aU[parseInt(aRef[j+5],16)].split("/");
							u2 = new UV(parseFloat(au[0]), parseFloat(au[1]));
							ref.geo.geometry.addFace( new Face(v0, v1, v2, ref.material, u0, u1, u2) );
						}catch(e:Error){
							trace("obj"+i+": ["+aV[parseInt(aRef[j],16)].split("/")+"],["+aV[parseInt(aRef[j+1],16)].split("/")+"],["+aV[parseInt(aRef[j+2],16)].split("/")+"]");
							trace("     uvs: ["+aV[parseInt(aRef[j+3],16)].split("/")+"],["+aV[parseInt(aRef[j+4],16)].split("/")+"],["+aU[parseInt(aRef[j+5],16)].split("/")+"]");
						}
					}
				}
			}
		}

		private function setSource():void
		{
			var geo0:Object = {};
			geo0.aVstr="-9f.2034/-1db.1b0d/-32.2016,1eb.61c/-285.1bfd/-32.2016,-1f6.2302/-285.1bfd/-32.2016,-1ab.0023/-1db.1b0d/-32.2016,1eb.619/-1db.1b0c/-32.2016,-3f.5b3/-171.1146/-32.2016,19c.1561/-171.1146/-32.2016,1f6.2302/-e2.ce1/-32.2016,-6.01c6/-e2.ce2/-32.2016,-b.1237/-71.1670/-32.2016,1f6.2302/-71.1670/-32.2016,5c.852/62.242c/-32.2016,1b0.40e/62.242c/-32.2016,5c.852/b0.2692/-32.2016,1b0.40e/b0.2692/-32.2016,21.1a0e/f8.153d/-32.2016,175.15ca/f8.153d/-32.2016,-3b.1662/153.1809/-32.2016,100.1231/153.1809/-32.2016,-60.20bb/1c4.e7a/-32.2016,127.231e/1c4.e7a/-32.2016,-57.1f5f/210.a4c/-32.2016,114.0df/210.a4c/-32.2016,-30.01f1/25c.61b/-32.2016,dc.003f/25c.61b/-32.2016,26.1ac0/285.1bfd/-32.2016,85.a9e/285.1bfd/-32.2016,1db.1eea/-129.229c/-32.2016,-9.ba5/-129.229c/-32.2016,-3f.5b3/-171.1146/32.2016,-9.ba5/-129.229c/32.2016,-6.01c6/-e2.ce2/32.2016,1db.1eea/-129.229c/32.2016,19c.1561/-171.1146/32.2016,1f6.2302/-e2.ce1/32.2016,85.a9e/285.1bfd/32.2016,dc.003f/25c.61b/32.2016,26.1ac0/285.1bfd/32.2016,-30.01f1/25c.61b/32.2016,114.0df/210.a4c/32.2016,-57.1f5f/210.a4c/32.2016,127.231e/1c4.e7a/32.2016,-60.20bb/1c4.e7a/32.2016,100.1231/153.1809/32.2016,-3b.1662/153.1809/32.2016,175.15ca/f8.153d/32.2016,21.1a0e/f8.153d/32.2016,1b0.40e/b0.2692/32.2016,5c.852/b0.2692/32.2016,1b0.40e/62.242c/32.2016,5c.852/62.242c/32.2016,1f6.2302/-71.1670/32.2016,-b.1237/-71.1670/32.2016,1eb.619/-1db.1b0c/32.2016,-9f.2034/-1db.1b0d/32.2016,-1ab.0023/-1db.1b0d/32.2016,1eb.61c/-285.1bfd/32.2016,-1f6.2302/-285.1bfd/32.2016";
			geo0.aUstr="0.172a474c92ffd2/0.4cf4f6c57585f,0.00140d302f2e3664/0.0020dbea984d2678,0.235550e7ccaf94/0.00a22c9d7c5280d,0.20b73ed80c0eae/0.2f7cc2b12989f2,0.00a81603284592d/0.3195ffbb8884e4,0.1fa15365178d6/0.4d40b071e80260,0.01ba552fc20b2ca/0.4e5715d300f6d0,0.02678eafe7fbf40/0.7584b897a99e50,0.11cede9b58b4eb/0.ba2afa3abffcb,0.1210ae3dc0a8b7/0.930c2b3e92b030,0.00336e92a7647d5/0.94393611cf4f10,0.90c874f508de70/0.1483e2dbbeb39f,0.01748bccfcf159f/0.1497c6e572ad19,0.9138988c8cf4d8/0.16a4151ceaa78a,0.017b8f7fef02a3a/0.16b7f6caa88798,0.a68d052ce92c58/0.18937e5477a408,0.2d0d649f4c61bc/0.277236c43aab5,0.140a083a691c04/0.1b08eb1a8ec620,0.576b7b5d66f7cc/0.1b1b6ac292ce93,0.156f4128f0f71e/0.3027ab551ac3f,0.49f4f36ed94eb8/0.1e2fc47d3f56f9,0.15277a22de22c7/0.202a64772655b4,0.517ce5ef924e38/0.339917f250bad,0.13c69a33f95cb7/0.36c94097a16ba,0.65f00aa3b25d58/0.224d78bda28722,0.10b2dc8790c034/0.38a0f3c6a3cf1,0.852cdd5d798b30/0.236a200878e88c,0.036662edb6605d0/0.61f8683404718c,0.11e259de0faecf/0.60dc8e0649c158,0.28a7cd85a57cb4/0.132ab9516d2632,0.410e15b524603/0.13402b827c1e1a,0.25dc3662dcfd7c/0.134050b3c1eb18,0.3c91f0449e7e7/0.132ade82b2f330,0.022eef870a7af14/0.147a6b1a4d0979,0.022edb27c4ae042/0.1495ebdc0f08d4,0.020211b21887294/0.1495c6aac93bd5,0.0336a34efd5357/0.147a45e9073c7b,0.25d034fa02994a/0.1391ff329ec300,0.25d21dd2597800/0.13ba2db10d9c1f,0.0230586a3ffb95c/0.13ba50a9e44221,0.03805ee7720c47/0.139224876b826d,0.25d3c0ee4d7658/0.13dc8c590d7b1c,0.0230729bff3b7b4/0.13dcaf51e4211e,0.2b8137aad39eb4/0.132ade82b2f330,0.4598edb165cd6/0.134d696fdaeb6f,0.28b2fd341d32ae/0.134d443e951e71,0.28b4a050113108/0.132ab9516d2632,0.2b7dda342001e4/0.13731563a51361,0.411b9e2895b9f/0.1372f00ed853f3,0.2b7c37182c038c/0.1395a02d461930,0.28af9fbd6995de/0.13957afc004c32,0.2b7d4e8ef19220/0.13e80b690ae2c9,0.2b7c37182c038c/0.13fee1b4bbe6da,0.28af9fbd6995de/0.13febebbe540d8,0.28b0b7342f2472/0.13e7e6143e235b,0.037fe12bdc0cc6/0.132ade82b2f330,0.022fdcb7e9e9146/0.1340a48625eac3,0.03381ed4d3aeaa/0.13407f54e01dc5,0.02032345bd6120c/0.132ab9516d2632,0.2b7eabc21a0110/0.13cb652363f227,0.28b21467579364/0.13cb424e143e95,0.022fc6e4b762254/0.1efab112d58a1,0.0202fd71d1c63b4/0.135c897a7fa94c,0.2b81206c07fe96/0.1395c58212d89e,0.28b4a050113108/0.1395a02d461930,0.022f9f9a18824d0/0.1390adb09f9d56,0.0202d62732e662c/0.1390885bd2dde8,0.2e4fe65b842b56/0.5097e326bad,0.2e4db7c6ca6c44/0.13dbb636ae3b88,0.2b81206c07fe96/0.13db933dd79586,0.2b83666bf60cd2/0.13acefa027dc5a,0.022f76db8ce872c/0.13c78c5ed3e879,0.03377bdaa54741/0.13c7670a07290b,0.2e50fda5e10ae0/0.1395c58212d89e,0.2b847de2bb9b68/0.1395a02d461930,0.022f584e077a878/0.13efaa7d0f0215,0.02028ed85b53ac8/0.13ef85284242a7,0.25d9aa7a235fd8/0.14599f2e0d6951,0.3c91f0449e7e7/0.147a5d160f6362,0.0230e9efc895064/0.53e15194ee2,0.0230d131f60f22a/0.1459c226e40f53,0.022f410421aea5c/0.2017094a4f1bf,0.020277913c12bb8/0.140e409d2ba478,0.25d6071aa433a0/0.140bd79b85339e,0.023096fbfe1c5f0/0.140bfccccb009c,0.022f10ff2fe7d12/0.144ceaa48c2829,0.020249003705e8e/0.144cc54fbf68bb,0.25cec05ba5db30/0.13720e443187b4,0.02302292d4c1c8c/0.1f1d1b5c01f87,0.28aa9f2ac1fab4/0.1366ad751e9331,0.3c96732d73935/0.1366d06df53933,0.28af9fbd6995de/0.1fb4ed6183cc5,0.25e3088f0fd73c/0.13d139b1bf1f20,0.25cb62e4f23e5e/0.132ab9516d2632,0.28ad2b3fe44764/0.13d139b1bf1f20,0.28af9fbd6995de/0.1404af2f34c790,0.25e3088f0fd73c/0.2007b6a678af5,0.25e093e521d9b6/0.13d15c870ed2b2,0/0,1/0,1/1,0/1,0.05fbdf8ed04261c/0.f4f5e81e44d5,0.11fa24b091580e/0.b8989df52cb33,0.1cf27d60af7ef/0.f4f5e81e44d5,0.13fe78edbee744/0.799a9eff638a1,0.01fe9e656bd8791/0.799a9eff638a1,0/0.b8989df52cb33,0.d0e5b557ea186/1,0.1065a9dda6b0e9/1,0.1f232574bbb4a/0.37039b16523d4,0.63ec89e5e00f68/0.37039b16523d4,0.14dd6f6ff19d03/0.204bc7a7fa35b0,0.502332ef9fbb68/0.204bc7a7fa35b0,0.152f228333b552/0.1e354e62010516,0.74fc91d59f617/0.1e354e62010516,0.13de2ae09c390d/0.1b1b39e90574e9,0.570b9eecfc7490/0.1b1b39e90574e9,0.a5be61d2e8f488/0.1899d9c7335152,0.2daf8e4a2de5d4/0.1899d9c7335152,0.91104e93be9948/0.16a1e89d191d05,0.019017a85c97d73/0.16a1e89d191d05,0.91104e93be9948/0.147c2a1b356190,0.019017a85c97d73/0.147c2a1b356190,0.122b27e00f1c64/0.92642ec16cd598,0/0.92642ec16cd598,0.1768b2762883c2/0.4ad652aba4907,0.029779f5db4086c/0.4ad652aba4907,0.029779f5db4086c/0,0.20d8adb1277b54/0.4ad652aba4907";
			geo0.aV= read(geo0.aVstr).split(",");
			geo0.aU= read(geo0.aUstr).split(",");
			geo0.f="0,1,2,0,1,2,3,0,2,3,0,2,0,4,1,0,4,1,4,0,5,4,0,5,4,5,6,4,5,6,7,8,9,7,8,9,7,9,a,7,9,a,a,9,b,a,9,b,a,b,c,a,b,c,c,b,d,c,b,d,c,d,e,c,d,e,e,d,f,e,d,f,e,f,10,e,f,10,10,f,11,10,f,11,10,11,12,10,11,12,12,11,13,12,11,13,12,13,14,12,13,14,14,13,15,14,13,15,14,15,16,14,15,16,16,15,17,16,15,17,16,17,18,16,17,18,18,17,19,18,17,19,18,19,1a,18,19,1a,7,1b,8,7,1b,8,1b,6,5,1b,6,5,5,1c,1b,5,1c,1b,1c,8,1b,1c,8,1b,1c,5,1d,1d,1e,1f,1c,1d,1e,1d,1f,20,8,1c,1e,21,22,23,8,1e,1f,21,23,24,6,1b,20,25,26,27,6,20,21,25,27,28,1b,7,22,26,29,2a,1b,22,20,26,2a,27,18,1a,23,2b,2c,2d,18,23,24,2b,2d,2e,1a,19,25,2c,2f,30,1a,25,23,2c,30,2d,19,17,26,2f,31,32,19,26,25,2f,32,30,16,18,24,33,34,35,16,24,27,33,35,36,17,15,28,37,38,39,17,28,26,37,39,3a,14,16,27,3b,33,36,14,27,29,3b,36,3c,15,13,2a,38,3d,3e,15,2a,28,38,3e,39,12,14,29,3f,3b,3c,12,29,2b,3f,3c,40,13,11,2c,3d,41,42,13,2c,2a,3d,42,3e,10,12,2b,43,44,45,10,2b,2d,43,45,46,11,f,2e,41,47,48,11,2e,2c,41,48,42,e,10,2d,49,43,46,e,2d,2f,49,46,4a,f,d,30,47,4b,4c,f,30,2e,47,4c,48,c,e,2f,4d,4e,4f,c,2f,31,4d,4f,50,d,b,32,4b,51,52,d,32,30,4b,52,4c,a,c,31,53,4d,50,a,31,33,53,50,54,b,9,34,51,55,56,b,34,32,51,56,52,7,a,33,29,53,54,7,33,22,29,54,2a,9,8,1f,55,21,24,9,1f,34,55,24,56,4,6,21,57,25,28,4,21,35,57,28,58,5,0,36,1e,59,5a,5,36,1d,1e,5a,1f,0,3,37,59,5b,5c,0,37,36,59,5c,5a,1,4,35,5d,57,58,1,35,38,5d,58,37,3,2,39,5e,5f,60,3,39,37,5e,60,61,2,1,38,62,63,64,2,38,39,62,64,65,20,1f,1e,66,67,68,20,1e,1d,66,68,69,1d,21,20,69,6a,66,1f,20,22,67,66,6b,23,25,26,6c,6d,6e,23,26,24,6c,6e,6f,24,26,28,6f,6e,70,24,28,27,6f,70,71,27,28,2a,71,70,72,27,2a,29,71,72,73,29,2a,2c,73,72,74,29,2c,2b,73,74,75,2b,2c,2e,75,74,76,2b,2e,2d,75,76,77,2d,2e,30,77,76,78,2d,30,2f,77,78,79,2f,30,32,79,78,7a,2f,32,31,79,7a,7b,31,32,34,7b,7a,7c,31,34,33,7b,7c,7d,33,34,1f,7d,7c,67,33,1f,22,7d,67,6b,21,1d,36,6a,69,7e,21,36,35,6a,7e,7f,38,35,36,80,7f,7e,39,36,37,63,7e,81,39,38,36,63,80,7e";
			geos.push(geo0);
		}

		private function buildMaterials():void
		{
		}
		private function cleanUp():void
		{
			for(var i:int = 0;i<1;++i){
				objs["obj"+i] == null;
			}
			aV = null;
			aU = null;
		}

		private function addContainers():void
		{
			aC = [];
			aC.push(this);
			var m0:MatrixAway3D = new MatrixAway3D();
			m0.sxx = 1;
			m0.sxy = 0;
			m0.sxz = 0;
			m0.tx = 0*_scale;
			m0.syx = 0;
			m0.syy = 1;
			m0.syz = 0;
			m0.ty = 0*_scale;
			m0.szx = 0;
			m0.szy = 0;
			m0.szz = 1;
			m0.tz = 0*_scale;
			transform = m0;
			name = "main";

		}

		public function get containers():Array
		{
			return aC;
		}


		public function get meshes():Array
		{
			return oList;
		}


		private function read(str:String):String
		{
			var start:int= 0;
			var chunk:String;
			var end:int= 0;
			var dec:String = "";
			var charcount:int = str.length;
			for(var i:int = 0;i<charcount;++i){
				if (str.charCodeAt(i)>=44 && str.charCodeAt(i)<= 48 ){
					dec+= str.substring(i, i+1);
				}else{
					start = i;
					chunk = "";
					while(str.charCodeAt(i)!=44 && str.charCodeAt(i)!= 45 && str.charCodeAt(i)!= 46 && str.charCodeAt(i)!= 47 && i<=charcount){
						i++;
					}
					chunk = ""+parseInt("0x"+str.substring(start, i), 16 );
					dec+= chunk;
					i--;
				}
			}
			return dec;
		}

	}
}